package de.buffalodan.ci.network;

import java.util.ArrayList;

public class Neuron {
	
	private double input = 0;
	private double output = 0;
	private Type type;
	
	/**
	 * All connections from producers (Layer before)
	 */
	private ArrayList<Connection> producerConnections = null;
	
	/**
	 * All connections to consumers (Layer after)
	 */
	private ArrayList<Connection> consumerConnections = null;
	
	public Neuron(Type type) {
		switch (type) {
		case INPUT:
			consumerConnections = new ArrayList<>();
			break;

		case OUTPUT:
			producerConnections = new ArrayList<>();
			break;
		case HIDDEN:
			consumerConnections = new ArrayList<>();
			producerConnections = new ArrayList<>();
		}
	}
	
	public void consume(double input) {
		this.input += input;
	}

	public double getInput() {
		return input;
	}

	public void setInput(double input) {
		this.input = input;
	}

	public double getOutput() {
		return output;
	}

	public void setOutput(double output) {
		this.output = output;
	}

	public ArrayList<Connection> getProducerConnections() {
		return producerConnections;
	}

	public void setProducerConnections(ArrayList<Connection> producerConnections) {
		this.producerConnections = producerConnections;
	}

	public ArrayList<Connection> getConsumerConnections() {
		return consumerConnections;
	}

	public void setConsumerConnections(ArrayList<Connection> consumerConnections) {
		this.consumerConnections = consumerConnections;
	}

	public Type getType() {
		return type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	public enum Type {
		INPUT,
		OUTPUT,
		HIDDEN;
	}

}
