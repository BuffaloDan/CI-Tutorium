<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->
<!-- ====================================================================== -->
<!-- ===================== - DO NOT EDIT THIS FILE! - ===================== -->
<!-- ====================================================================== -->
<!--                                                                        -->
<!-- Any modifications will be overwritten.                                 -->
<!--                                                                        -->
<!-- Generated by Maven Ant Plugin on 5/23/17 4:32 PM                       -->
<!-- See: http://maven.apache.org/plugins/maven-ant-plugin/                 -->
<!--                                                                        -->
<!-- ====================================================================== -->
<project basedir="." default="package" name="CI-Library-from-maven">
  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->
  <property file="${user.home}/.m2/maven.properties"/>
  <property file="maven-build.properties"/>
  <property name="maven.build.finalName" value="CI-Library-0.0.1-SNAPSHOT"/>
  <property name="maven.build.dir" value="target"/>
  <property name="maven.build.outputDir" value="${maven.build.dir}/classes"/>
  <property name="maven.build.srcDir.0" value="src"/>
  <property name="maven.build.resourceDir.0" value="src/main/resources"/>
  <property name="maven.build.testOutputDir" value="${maven.build.dir}/test-classes"/>
  <property name="maven.build.testDir.0" value="src/test/java"/>
  <property name="maven.build.testResourceDir.0" value="src/test/resources"/>
  <property name="maven.test.reports" value="${maven.build.dir}/test-reports"/>
  <property name="maven.reporting.outputDirectory" value="${maven.build.dir}/site"/>
  <property name="maven.repo.local" value="${user.home}/.m2/repository"/>
  <property name="maven.settings.offline" value="false"/>
  <property name="maven.settings.interactiveMode" value="true"/>
  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->
  <path id="build.classpath"/>
  <path id="build.test.classpath"/>
  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->
  <target description="Clean the output directory" name="clean">
    <delete dir="${maven.build.dir}"/>
  </target>
  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->
  <target depends="get-deps" description="Compile the code" name="compile">
    <mkdir dir="${maven.build.outputDir}"/>
    <javac debug="true" deprecation="true" destdir="${maven.build.outputDir}" fork="false" nowarn="false" optimize="false" source="1.8" target="1.8" verbose="false">
      <src>
        <pathelement location="${maven.build.srcDir.0}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
  </target>
  <!-- ====================================================================== -->
  <!-- Test-compilation target                                                -->
  <!-- ====================================================================== -->
  <target depends="compile" description="Compile the test code" name="compile-tests" unless="maven.test.skip">
    <mkdir dir="${maven.build.testOutputDir}"/>
  </target>
  <!-- ====================================================================== -->
  <!-- Run all tests                                                          -->
  <!-- ====================================================================== -->
  <target depends="compile-tests, junit-missing" description="Run the test cases" name="test" unless="junit.skipped"/>
  <target name="test-junit-present">
    <available classname="junit.framework.Test" classpathref="build.test.classpath" property="junit.present"/>
  </target>
  <target depends="test-junit-present" name="test-junit-status">
    <condition property="junit.missing">
      <and>
        <isfalse value="${junit.present}"/>
        <isfalse value="${maven.test.skip}"/>
      </and>
    </condition>
    <condition property="junit.skipped">
      <or>
        <isfalse value="${junit.present}"/>
        <istrue value="${maven.test.skip}"/>
      </or>
    </condition>
  </target>
  <target depends="jar" description="Start Applocation" name="run">
    <java classname="${java.main.class}" fork="true">
      <classpath>
        <path refid="build.classpath"/>
        <pathelement location="${maven.build.dir}/${maven.build.finalName}.jar"/>
      </classpath>
    </java>
  </target>
  <target depends="test-junit-status" if="junit.missing" name="junit-missing">
    <echo>=================================== WARNING ===================================</echo>
    <echo>JUnit is not present in the test classpath or your $ANT_HOME/lib directory. Tests not executed.</echo>
    <echo>===============================================================================</echo>
  </target>
  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->
  <target description="Generates the Javadoc of the application" name="javadoc">
    <javadoc access="protected" author="true" breakiterator="false" charset="ISO-8859-1" destdir="${maven.reporting.outputDirectory}/apidocs" linksource="false" nodeprecated="false" nodeprecatedlist="false" nohelp="false" noindex="false" nonavbar="false" notree="false" old="false" packagenames="*" serialwarn="false" sourcepath="${maven.build.srcDir.0}" splitindex="false" use="true" verbose="false" version="true"/>
  </target>
  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->
  <target depends="compile,test" description="Package the application" name="package">
    <jar basedir="${maven.build.outputDir}" compress="true" excludes="**/package.html" index="false" jarfile="${maven.build.dir}/${maven.build.finalName}.jar"/>
  </target>
  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->
  <target depends="package" description="Builds the jar for the application" name="jar"/>
  <!-- ====================================================================== -->
  <!-- Download dependencies target                                           -->
  <!-- ====================================================================== -->
  <target name="test-offline">
    <condition property="maven.mode.offline">
      <equals arg1="${maven.settings.offline}" arg2="true"/>
    </condition>
  </target>
  <target depends="test-offline" description="Download all dependencies" name="get-deps" unless="maven.mode.offline">
    <mkdir dir="${maven.repo.local}"/>
  </target>
</project>